<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Gopher Tips</title>
    <link>https://gopher.tips/posts/</link>
    <description>Recent content in Posts on Gopher Tips</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Mon, 13 Apr 2020 22:05:13 +0100</lastBuildDate>
    
	<atom:link href="https://gopher.tips/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Limitando a criação de Goroutines</title>
      <link>https://gopher.tips/posts/goroutine-limit/</link>
      <pubDate>Mon, 13 Apr 2020 22:05:13 +0100</pubDate>
      
      <guid>https://gopher.tips/posts/goroutine-limit/</guid>
      <description>Limitar a quantidade de Goroutines que podem ser criadas durante um processamento é essencial para garantir a estabilidade e performance de uma aplicação. Nesse episódio vamos ver como resolver esse problema utilizando channels.
  O código exibido no vídeo pode ser encontrando no GitHub.</description>
    </item>
    
    <item>
      <title>Errgroup</title>
      <link>https://gopher.tips/posts/errgroup/</link>
      <pubDate>Thu, 09 Apr 2020 16:39:13 +0100</pubDate>
      
      <guid>https://gopher.tips/posts/errgroup/</guid>
      <description>errgroup é um pacote criado pelo Google que facilita o gerênciamento de goroutines. Provê sincronização, propagação de erro e cancelamento automático de contexto.
  O código exibido no vídeo pode ser encontrando no GitHub.</description>
    </item>
    
  </channel>
</rss>